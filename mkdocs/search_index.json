{
    "docs": [
        {
            "location": "/", 
            "text": "VLSCI GenomeSpace Bible\n\n\nWritten by Madison Flannery, 2016.", 
            "title": "Home"
        }, 
        {
            "location": "/#vlsci-genomespace-bible", 
            "text": "Written by Madison Flannery, 2016.", 
            "title": "VLSCI GenomeSpace Bible"
        }, 
        {
            "location": "/build_gs_1.0/", 
            "text": "Building v1.0 of GenomeSpace\n\n\nTo build Version 1.0 (SimpleDB/Virgo) of GenomeSpace:\n\n\nsudo su\ncd /mnt/genomespace/SRC/combined\nmvn clean install -PdeployLocal -Dmaven.test.skip=true -DskipTests\n\n\n\n\nTo start the server\n\n\ncd /mnt/genomespace/DEVDEPLOY/virgo/bin\n./startup.sh", 
            "title": "Version 1.0"
        }, 
        {
            "location": "/build_gs_1.0/#building-v10-of-genomespace", 
            "text": "To build Version 1.0 (SimpleDB/Virgo) of GenomeSpace:  sudo su\ncd /mnt/genomespace/SRC/combined\nmvn clean install -PdeployLocal -Dmaven.test.skip=true -DskipTests  To start the server  cd /mnt/genomespace/DEVDEPLOY/virgo/bin\n./startup.sh", 
            "title": "Building v1.0 of GenomeSpace"
        }, 
        {
            "location": "/build_gs_2.0/", 
            "text": "Building v2.0 of GenomeSpace\n\n\nTo build Version 2.0 (MongoDB/Tomcat7) of GenomeSpace:\n\n\nsudo su\ncd /home/ubuntu/genomespace/SRC/combined\nmvn -X clean install  -am -DskipTests -Denv-properties-file=/home/ubuntu/genomespace/env-dev.properties -P deployToLocalTomcat -Dmaven.test.skip=true\n\n\n\n\nEnsure you have a env-dev.properties file in the home directory, which contains the URL's and credentials required for GenomeSpace. See \nthis example\n\n\nTo start the server\n\n\nsudo service tomcat7 restart\n\n\n\n\nCaching issues\n\n\nIf you experience tomcat/maven caching issues (i.e. your changes aren't being reflected after a build/restart):\n\n\nrm -r /var/lib/tomcat7/webapps/datamanager*\nrm -r /var/lib/tomcat7/webapps/atm*\nrm -r /var/lib/tomcat7/webapps/identityServer*\nrm -r /var/lib/tomcat7/webapps/jsui*\n\n\n\n\nThen re-build the code and restart the server.", 
            "title": "Version 2.0"
        }, 
        {
            "location": "/build_gs_2.0/#building-v20-of-genomespace", 
            "text": "To build Version 2.0 (MongoDB/Tomcat7) of GenomeSpace:  sudo su\ncd /home/ubuntu/genomespace/SRC/combined\nmvn -X clean install  -am -DskipTests -Denv-properties-file=/home/ubuntu/genomespace/env-dev.properties -P deployToLocalTomcat -Dmaven.test.skip=true  Ensure you have a env-dev.properties file in the home directory, which contains the URL's and credentials required for GenomeSpace. See  this example  To start the server  sudo service tomcat7 restart", 
            "title": "Building v2.0 of GenomeSpace"
        }, 
        {
            "location": "/build_gs_2.0/#caching-issues", 
            "text": "If you experience tomcat/maven caching issues (i.e. your changes aren't being reflected after a build/restart):  rm -r /var/lib/tomcat7/webapps/datamanager*\nrm -r /var/lib/tomcat7/webapps/atm*\nrm -r /var/lib/tomcat7/webapps/identityServer*\nrm -r /var/lib/tomcat7/webapps/jsui*  Then re-build the code and restart the server.", 
            "title": "Caching issues"
        }, 
        {
            "location": "/design_overview/", 
            "text": "GenomeSpace Design Overview", 
            "title": "Overview"
        }, 
        {
            "location": "/design_overview/#genomespace-design-overview", 
            "text": "", 
            "title": "GenomeSpace Design Overview"
        }, 
        {
            "location": "/design_db/", 
            "text": "GenomeSpace Database Design", 
            "title": "The Database"
        }, 
        {
            "location": "/design_db/#genomespace-database-design", 
            "text": "", 
            "title": "GenomeSpace Database Design"
        }, 
        {
            "location": "/design_jsui/", 
            "text": "JavaScript User Interface", 
            "title": "JSUI"
        }, 
        {
            "location": "/design_jsui/#javascript-user-interface", 
            "text": "", 
            "title": "JavaScript User Interface"
        }, 
        {
            "location": "/design_idserver/", 
            "text": "Identity Server/Manager", 
            "title": "Identity Server"
        }, 
        {
            "location": "/design_idserver/#identity-servermanager", 
            "text": "", 
            "title": "Identity Server/Manager"
        }, 
        {
            "location": "/design_datamanager/", 
            "text": "Data Manager", 
            "title": "Data Manager"
        }, 
        {
            "location": "/design_datamanager/#data-manager", 
            "text": "", 
            "title": "Data Manager"
        }, 
        {
            "location": "/design_atm/", 
            "text": "Analysis and Tool Manager", 
            "title": "Analysis and Tool Manager"
        }, 
        {
            "location": "/design_atm/#analysis-and-tool-manager", 
            "text": "", 
            "title": "Analysis and Tool Manager"
        }, 
        {
            "location": "/design_cdk/", 
            "text": "Client Development Kit", 
            "title": "CDK"
        }, 
        {
            "location": "/design_cdk/#client-development-kit", 
            "text": "", 
            "title": "Client Development Kit"
        }, 
        {
            "location": "/ssl_update/", 
            "text": "How to update the SSL Certificate once expired\n\n\nEnsure you have root access to the machine.\n\n\nsudo su\ncd /mnt/genomespace/DEVDEPLOY/virgo/config\n\n\n\n\nRemove all old keys and cert files from the directory.\n\n\nWith the key and certificate in .pem format, do the following steps. You'll need to set a password, for consistency, use the one in the tomcat server.xml file under the SSL connector.\n\n\nopenssl pkcs12 -export -inkey genome-edu-au-2016.key -in genome-edu-au-2016.cer -name tomcat -out keystore.p12\nkeytool -importkeystore -srckeystore keystore.p12 -srcstoretype pkcs12 -destkeystore $JAVA_HOME/jre/lib/security/cacerts\n\n\n\n\nIf it errors because the certificate is already there, delete the existing one:\n\n\nkeytool -delete -alias tomcat -keystore $JAVA_HOME/jre/lib/security/cacerts\n\n\n\n\nFinally, create the keystore file Tomcat will use\n\n\nkeytool -importkeystore -srckeystore keystore.p12 -srcstoretype pkcs12 -deststoretype jks -destkeystore keystore\n\n\n\n\nThen, follow the instructions to \nupdate the genomespace secret key\n, and rebuild the code.", 
            "title": "Updating the SSL Certificate"
        }, 
        {
            "location": "/ssl_update/#how-to-update-the-ssl-certificate-once-expired", 
            "text": "Ensure you have root access to the machine.  sudo su\ncd /mnt/genomespace/DEVDEPLOY/virgo/config  Remove all old keys and cert files from the directory.  With the key and certificate in .pem format, do the following steps. You'll need to set a password, for consistency, use the one in the tomcat server.xml file under the SSL connector.  openssl pkcs12 -export -inkey genome-edu-au-2016.key -in genome-edu-au-2016.cer -name tomcat -out keystore.p12\nkeytool -importkeystore -srckeystore keystore.p12 -srcstoretype pkcs12 -destkeystore $JAVA_HOME/jre/lib/security/cacerts  If it errors because the certificate is already there, delete the existing one:  keytool -delete -alias tomcat -keystore $JAVA_HOME/jre/lib/security/cacerts  Finally, create the keystore file Tomcat will use  keytool -importkeystore -srckeystore keystore.p12 -srcstoretype pkcs12 -deststoretype jks -destkeystore keystore  Then, follow the instructions to  update the genomespace secret key , and rebuild the code.", 
            "title": "How to update the SSL Certificate once expired"
        }, 
        {
            "location": "/update_gs_key/", 
            "text": "How to update the GS secret key\n\n\ncd /home/ubuntu/genomespace/gensecretkey\n./gengssecretkey.sh\nmv genomespace-secret.key ..\ncd ..\ncp genomespace-secret.key /root/genomespace\n\n\n\n\nFinally, re-build the code.", 
            "title": "Updating the GS Key"
        }, 
        {
            "location": "/update_gs_key/#how-to-update-the-gs-secret-key", 
            "text": "cd /home/ubuntu/genomespace/gensecretkey\n./gengssecretkey.sh\nmv genomespace-secret.key ..\ncd ..\ncp genomespace-secret.key /root/genomespace  Finally, re-build the code.", 
            "title": "How to update the GS secret key"
        }, 
        {
            "location": "/cors_config/", 
            "text": "AWS CORS Configuration\n\n\nSee below for the CORS config to add to the default AWS S3 bucket attached to GenomeSpace.\n\n\nCORSConfiguration\n\n    \nCORSRule\n\n        \nAllowedOrigin\nPUT GENOMESPACE URL HERE\n/AllowedOrigin\n\n        \nAllowedMethod\nGET\n/AllowedMethod\n\n        \nAllowedMethod\nPUT\n/AllowedMethod\n\n        \nAllowedMethod\nPOST\n/AllowedMethod\n\n        \nAllowedMethod\nDELETE\n/AllowedMethod\n\n        \nMaxAgeSeconds\n3000\n/MaxAgeSeconds\n\n        \nAllowedHeader\n*\n/AllowedHeader\n\n    \n/CORSRule\n\n\n/CORSConfiguration", 
            "title": "AWS CORS Config"
        }, 
        {
            "location": "/cors_config/#aws-cors-configuration", 
            "text": "See below for the CORS config to add to the default AWS S3 bucket attached to GenomeSpace.  CORSConfiguration \n     CORSRule \n         AllowedOrigin PUT GENOMESPACE URL HERE /AllowedOrigin \n         AllowedMethod GET /AllowedMethod \n         AllowedMethod PUT /AllowedMethod \n         AllowedMethod POST /AllowedMethod \n         AllowedMethod DELETE /AllowedMethod \n         MaxAgeSeconds 3000 /MaxAgeSeconds \n         AllowedHeader * /AllowedHeader \n     /CORSRule  /CORSConfiguration", 
            "title": "AWS CORS Configuration"
        }, 
        {
            "location": "/custom_components/", 
            "text": "GenomeSpace Australia Custom Components", 
            "title": "GS-AU Custom Components"
        }, 
        {
            "location": "/custom_components/#genomespace-australia-custom-components", 
            "text": "", 
            "title": "GenomeSpace Australia Custom Components"
        }, 
        {
            "location": "/swift/", 
            "text": "OpenStack Swift", 
            "title": "OpenStack Swift"
        }, 
        {
            "location": "/swift/#openstack-swift", 
            "text": "", 
            "title": "OpenStack Swift"
        }, 
        {
            "location": "/faq/", 
            "text": "Frequently Asked Questions", 
            "title": "FAQ"
        }, 
        {
            "location": "/faq/#frequently-asked-questions", 
            "text": "", 
            "title": "Frequently Asked Questions"
        }
    ]
}